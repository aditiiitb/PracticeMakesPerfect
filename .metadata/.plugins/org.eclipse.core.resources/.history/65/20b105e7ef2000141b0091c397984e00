
public class Program {
	public static void main(String[] args)
	{
		System.out.println("szdsf");
		int[] values = {10,20,30,40};
		int[] weights = {1, 2,1, 3};
		int W = 3;
		System.out.println(CalculateBestKnapSackValue(values, weights, W));
		
	}
	
	private static int CalculateBestKnapSackValue(int[] values, int[] weights, int W)
	{
		if (SumOfArray(weights) <= W)
		{
			return SumOfArray(values);
		}
		else if (W <= 0)
		{
			return 0;
		}
		else 
		{
			// in a for loop go over each element 
			// see if including it in the knapsack is better than not
			for (int i = 0 ; i < values.length; i++)
			{
				int knapSackWithW = values[i] + CalculateBestKnapSackValue(RemoveI(values,i), RemoveI(weights,i), W - weights[i]);
				int knapSackWithOutW = CalculateBestKnapSackValue(RemoveI(values,i), RemoveI(weights,i), W);
				return (knapSackWithW > knapSackWithOutW) ? knapSackWithW : knapSackWithOutW;				
			}
		}
	}
	
	private static int[] RemoveI(int[] nums, int i)
	{
		int[] copy = new int[nums.length -1];
		
	}
	
	private static int SumOfArray(int[] nums)
	{
		int result = 0;
		for (int i = 0; i < nums.length ; i++)
		{
			result += nums[i];
		}
		return result;
	}
}
